#load pre-trained model
m1=LoadModel($CurModel$, format=cntk)
SetDefaultModel(m1)
DumpModel(m1,  "$RootDir$/dump_originalModel.txt")

inDim=512
labelDimNew=101
fcWScale = 1.13
fcBValue = 0

#add new final layer
newL = DNNLayer(inDim, labelDimNew, pool5, fcWScale, fcBValue)
labelsNew = Input(labelDimNew, tag="label")
SetInput(CE, 0, labelsNew)
SetInput(CE, 1, newL.z)
SetInput(Err, 0, labelsNew)
SetInput(Err, 1, newL.z)
SetProperty(newL.z, "output", "true")

#remove old final layer (note:make sure these deletes happen in reverse order from the original definition)
DeleteNode(OutputNodes.z)
DeleteNode(OutputNodes.t)
DeleteNode(OutputNodes.b)
DeleteNode(OutputNodes.W)
DeleteNode(labels)

#rename nodes to have same name as before (so that the same .cntk training script can be used)
Rename(labelsNew, labels)
Rename(newL.z, OutputNodes.z)
Rename(newL.t, OutputNodes.t)
Rename(newL.b, OutputNodes.b)
Rename(newL.W, OutputNodes.W)

#save the model
SaveModel(m1, $NewModel$, format=cntk)
DumpModel(m1,  "$RootDir$/dump_modifiedModel.txt")